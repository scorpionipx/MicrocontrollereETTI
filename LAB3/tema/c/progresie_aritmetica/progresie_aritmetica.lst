

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Mon Oct 16 18:25:07 2017

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F84
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNROOT	_main
    43                           psect	maintext,global,class=CODE,delta=2
    44                           global __pmaintext
    45  03E7                     __pmaintext:
    46                           	file	"progresie_aritmetica.as"
    47                           	line	#
    48                           psect cinit,class=CODE,delta=2
    49                           global start_initialization
    50  03E5                     start_initialization:
    51                           
    52                           psect cinit,class=CODE,delta=2
    53                           global end_of_initialization
    54                           
    55                           ;End of C runtime variable initialization code
    56                           
    57  03E5                     end_of_initialization:
    58  03E5  0183               clrf status
    59  03E6  2BE7               ljmp _main	;jump to C main() function
    60                           psect	cstackBANK0,class=BANK0,space=1
    61                           global __pcstackBANK0
    62  000C                     __pcstackBANK0:
    63                           	global	?_main
    64  000C                     ?_main:	; 0 bytes @ 0x0
    65                           	global	??_main
    66  000C                     ??_main:	; 0 bytes @ 0x0
    67  000C                     	ds	1
    68                           	global	main@sum
    69  000D                     main@sum:	; 1 bytes @ 0x1
    70  000D                     	ds	1
    71                           	global	main@n
    72  000E                     main@n:	; 1 bytes @ 0x2
    73  000E                     	ds	1
    74                           	global	main@c
    75  000F                     main@c:	; 1 bytes @ 0x3
    76  000F                     	ds	1
    77 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
    78 ;;Auto spaces:   Size  Autos    Used
    79 ;; COMMON           0      0       0
    80 ;; BANK0           66      4       4
    81                           
    82 ;;
    83 ;; Pointer list with targets:
    84                           
    85                           
    86                           
    87 ;;
    88 ;; Critical Paths under _main in COMMON
    89 ;;
    90 ;;   None.
    91 ;;
    92 ;; Critical Paths under _main in BANK0
    93 ;;
    94 ;;   None.
    95                           
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    98 ;;
    99                           
   100 ;;
   101 ;;Call Graph Tables:
   102 ;;
   103 ;; ---------------------------------------------------------------------------------
   104 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   105 ;; ---------------------------------------------------------------------------------
   106 ;; (0) _main                                                 4     4      0      71
   107 ;;                                              0 BANK0      4     4      0
   108 ;; ---------------------------------------------------------------------------------
   109 ;; Estimated maximum stack depth 0
   110 ;; ---------------------------------------------------------------------------------
   111                           
   112 ;; Call Graph Graphs:
   113                           
   114 ;; _main (ROOT)
   115 ;;
   116                           
   117 ;; Address spaces:
   118                           
   119 ;;Name               Size   Autos  Total    Cost      Usage
   120 ;;BITCOMMON            0      0       0       0        0.0%
   121 ;;EEDATA              40      0       0       0        0.0%
   122 ;;NULL                 0      0       0       0        0.0%
   123 ;;CODE                 0      0       0       0        0.0%
   124 ;;BITSFR0              0      0       0       1        0.0%
   125 ;;SFR0                 0      0       0       1        0.0%
   126 ;;COMMON               0      0       0       1        0.0%
   127 ;;BITSFR1              0      0       0       2        0.0%
   128 ;;SFR1                 0      0       0       2        0.0%
   129 ;;STACK                0      0       0       2        0.0%
   130 ;;BANK0               42      4       4       3        6.1%
   131 ;;ABS                  0      0       0       4        0.0%
   132 ;;BITBANK0            42      0       0       5        0.0%
   133 ;;DATA                 0      0       0       6        0.0%
   134                           
   135                           	global	_main
   136                           psect	maintext
   137                           
   138 ;; *************** function _main *****************
   139 ;; Defined at:
   140 ;;		line 9 in file "D:\Documents\Facultate\Anul IV\Microcontrollere\LAB3\tema\c\progresie_aritmetica\progresie_aritmetic
       a.c"
   141 ;; Parameters:    Size  Location     Type
   142 ;;		None
   143 ;; Auto vars:     Size  Location     Type
   144 ;;  c               1    3[BANK0 ] unsigned char 
   145 ;;  n               1    2[BANK0 ] unsigned char 
   146 ;;  sum             1    1[BANK0 ] unsigned char 
   147 ;; Return value:  Size  Location     Type
   148 ;;		None               void
   149 ;; Registers used:
   150 ;;		wreg, status,2, status,0
   151 ;; Tracked objects:
   152 ;;		On entry : 17F/0
   153 ;;		On exit  : 0/0
   154 ;;		Unchanged: 0/0
   155 ;; Data sizes:     COMMON   BANK0
   156 ;;      Params:         0       0
   157 ;;      Locals:         0       3
   158 ;;      Temps:          0       1
   159 ;;      Totals:         0       4
   160 ;;Total ram usage:        4 bytes
   161 ;; This function calls:
   162 ;;		Nothing
   163 ;; This function is called by:
   164 ;;		Startup code after reset
   165 ;; This function uses a non-reentrant model
   166 ;;
   167                           psect	maintext
   168                           	file	"D:\Documents\Facultate\Anul IV\Microcontrollere\LAB3\tema\c\progresie_aritmetica\
                                 progresie_aritmetica.c"
   169                           	line	9
   170                           	global	__size_of_main
   171  0019                     	__size_of_main	equ	__end_of_main-_main
   172                           	
   173  03E7                     _main:	
   174                           	opt	stack 8
   175                           ; Regs used in _main: [wreg+status,2+status,0]
   176                           	line	12
   177                           	
   178  03E7                     l1315:	
   179                           ;progresie_aritmetica.c: 10: unsigned char n, sum;
   180                           ;progresie_aritmetica.c: 12: n = 7;
   181  03E7  3007               	movlw	(07h)
   182  03E8  1283               	bcf	status, 5	;RP0=0, select bank0
   183  03E9  008C               	movwf	(??_main+0)+0
   184  03EA  080C               	movf	(??_main+0)+0,w
   185  03EB  008E               	movwf	(main@n)
   186                           	line	13
   187                           	
   188  03EC                     l1317:	
   189                           ;progresie_aritmetica.c: 13: sum = 0;
   190  03EC  018D               	clrf	(main@sum)
   191                           	line	15
   192                           	
   193  03ED                     l1319:	
   194                           ;progresie_aritmetica.c: 15: for(char c = 0; c <= n; c++)
   195  03ED  018F               	clrf	(main@c)
   196  03EE  2BF8               	goto	l1323
   197                           	line	16
   198                           	
   199  03EF                     l168:	
   200                           	line	17
   201                           	
   202  03EF                     l1321:	
   203                           ;progresie_aritmetica.c: 16: {
   204                           ;progresie_aritmetica.c: 17: sum += c;
   205  03EF  080F               	movf	(main@c),w
   206  03F0  008C               	movwf	(??_main+0)+0
   207  03F1  080C               	movf	(??_main+0)+0,w
   208  03F2  078D               	addwf	(main@sum),f
   209                           	line	15
   210  03F3  3001               	movlw	(01h)
   211  03F4  008C               	movwf	(??_main+0)+0
   212  03F5  080C               	movf	(??_main+0)+0,w
   213  03F6  078F               	addwf	(main@c),f
   214  03F7  2BF8               	goto	l1323
   215                           	
   216  03F8                     l167:	
   217                           	
   218  03F8                     l1323:	
   219  03F8  080F               	movf	(main@c),w
   220  03F9  020E               	subwf	(main@n),w
   221  03FA  1803               	skipnc
   222  03FB  2BFD               	goto	u2151
   223  03FC  2BFE               	goto	u2150
   224  03FD                     u2151:
   225  03FD  2BEF               	goto	l1321
   226  03FE                     u2150:
   227                           	
   228  03FE                     l169:	
   229                           	line	20
   230                           # 20 "D:\Documents\Facultate\Anul IV\Microcontrollere\LAB3\tema\c\progresie_aritmetica\p
                                 rogresie_aritmetica.c"
   231  03FE  0000               NOP ;#
   232                           psect	maintext
   233                           	line	21
   234                           	
   235  03FF                     l170:	
   236                           	global	start
   237  03FF  2800               	ljmp	start
   238                           	opt stack 0
   239                           GLOBAL	__end_of_main
   240  0400                     	__end_of_main:
   241 ;; =============== function _main ends ============
   242                           
   243                           	signat	_main,88
   244                           psect	maintext
   245                           	global	btemp
   246  004E                     	btemp set 04Eh
   247                           
   248                           	DABS	1,78,2	;btemp
   249                           	global	wtemp0
   250  004E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Mon Oct 16 18:25:07 2017

                 l170 03FF                   l167 03F8                   l168 03EF                   l169 03FE  
                l1321 03EF                  l1323 03F8                  l1315 03E7                  l1317 03EC  
                l1319 03ED                  u2150 03FE                  u2151 03FD                  _main 03E7  
                btemp 004E                  start 0000                 ?_main 000C                 main@c 000F  
               main@n 000E                 status 0003                 wtemp0 004E          __end_of_main 0400  
              ??_main 000C            __pmaintext 03E7               main@sum 000D  end_of_initialization 03E5  
 start_initialization 03E5         __pcstackBANK0 000C         __size_of_main 0019  
